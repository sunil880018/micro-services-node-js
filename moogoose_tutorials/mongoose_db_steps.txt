

----------------------- 1. Mongoose Database Connection Steps ------------------------
1. db connection
2. making Schema (Table fields)
3. making model (Table)
4. saving document (record)
5. middleware

----------------------Mongoose Connection ------------------------

1.mongoose.connect('mongodb://username:password@host:port/database?options...');
                   
                   OR
                   
2.mongoose.connect(uri, options);

Option Can be----

const options = {
  autoIndex: false, // Don't build indexes
  maxPoolSize: 10, // Maintain up to 10 socket connections
  serverSelectionTimeoutMS: 5000, // Keep trying to send operations for 5 seconds
  socketTimeoutMS: 45000, // Close sockets after 45 seconds of inactivity
  family: 4 // Use IPv4, skip trying IPv6
};

Example ---> mongoose.connect('mongodb://localhost:27017/myapp'); // myapp is database name


3. Connect Multiple host

mongoose.connect('mongodb://user:pw@host1.com:27017,host2.com:27017,host3.com:27017/testdb');



-------------------- 2. Mongoose Schema ----------------------------


import mongoose from 'mongoose';
  const { Schema } = mongoose;

  const blogSchema = new Schema({
    title:  String, // String is shorthand for {type: String}
    author: String,
    body:   String,
    comments: [{ body: String, date: Date }],
    date: { type: Date, default: Date.now },
    hidden: Boolean,
    meta: {
      votes: Number,
      favs:  Number
    }
  });

--------------------------- 3. Making Model (Table)-----------------------

const Blog = mongoose.model('Blog', blogSchema); // Blog is Table name 


----------------------------4. saving document --------------------

const doc = new Blog(); // Blog takes all the details which is describe attributes in schema
doc.save()


You can also overwrite Mongoose's default _id with your own _id. 
Just be careful: Mongoose will refuse to save a document that doesn't have an _id, 
so you're responsible for setting _id if you define your own _id path.

Example ----->

const schema = new Schema({ _id: Number });
const blog = mongoose.model('Blog', blogSchema);

const doc = new blog();
await doc.save(); // Throws "document must have an _id before saving"

doc._id = 1;
await doc.save(); // works


---------------------------5 middleware----------------------

Middleware are functions that run at specific stages of a pipeline. 
Mongoose supports middleware for the following operations:

1.Aggregate
2.Document
3.Model
4.Query


For instance, models have pre and post functions that take two parameters:

1.Type of event (‘init’, ‘validate’, ‘save’, ‘remove’)

2.A callback that is executed with this referencing the model instance
  2.a) working of middleware

       userModel ---> pre-save middleware ----> save --> post-save middleware
                         |                       |                |
                         |                       |                |
                 generate password               |                |
                     hash                    write to         send email when 
                                             database         user account is 
                                                               created



---------------- pre save -----------------------------
userSchema.pre('save', function (next) {
  let now = Date.now()
   
  this.updatedAt = now
  // Set a value for createdAt only if it is null
  if (!this.createdAt) {
    this.createdAt = now
  }
  // Call the next function in the pre-save chain
  next()    
})

----> see documentation of mongoose ,very goog explaination on that